Accuracy,Precision (Class 0),Precision (Class 1),Precision (Class 2),Recall (Class 0),Recall (Class 1),Recall (Class 2),F1 Score (Class 0),F1 Score (Class 1),F1 Score (Class 2),Label Confusion Matrix,Confusion Matrix
0.6816460905349794,0.828696925329429,0.7750197005516154,0.31989247311827956,0.947016174010039,0.6154568210262829,0.43830570902394106,0.8839146277980219,0.6860830136030694,0.3698523698523699,
"[[[3931  351]
  [  95 1698]]

 [[2308  571]
  [1229 1967]]

 [[3977 1012]
  [ 610  476]]]",
  
  "[[1698   34   61]
 [ 278 1967  951]
 [  73  537  476]]"

#model 6이후로는 hyperparameter를 고정합니다.(이제는 우리가 원하는 class 2 에 대한 f1, recall 이 높은 모델을 찾는 과정)
{
    "input_dim": "feature.shape[1]",
    "layers": [64, 256, 256, 3],
    "activations": ["relu","relu","relu"],
    "dropout": 0.2,
    "lr": 0.0001,
    "epochs": 200,
    "batch_size": 256,
    "criterion" : "nn.CrossEntropyLoss()",
    "optimizer" : "Adam"
}